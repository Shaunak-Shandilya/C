//The following list of programs is related to arrays

//Some Handy Programs for Arrays are listed below

/*

void display(int q[][], int row, int col)
{
    int i,j;
    for ( i = 0 ; i < row ; i++)
    {
        for ( j = 0 ; j < col ; j++)
        {
            printf("%d ", q[i][j]);
        }
        printf("\n");
   }
}

*/

//To find size of row and column of a 2d array

/*
int row = sizeof(array_name_here) / sizeof(array_name_here[0]);
int column = sizeof(array_name_here[0])/row;
*/

/*

//This program demonstrates how inputting more data than the allowed length of array can lead to
//overwriting of data in memory cells regardless of what files they are, occupid or unoccupied,
//can lead to system corruption and loss of data.
//Although we do not overwrite data in the program we read data outside the array

#include<stdio.h>

void main()
{
        int arr[5],i,j,k;
        for(i = 0 ; i < 5 ; i++)
        {
            arr[i] = i;
        }

        for(j = 0 ; j < 15 ; j++)
        {
            printf("%d\n",arr[j]);
        }

    printf("\n\nArray length = %d",sizeof(arr)/sizeof(arr[0]));

}   

*/

//----------------------------------------------------------------------------------------------------

/*

//Write a program to replace the odd cells of an array with the even cells, without overwriting 
//outside of the array

#include<stdio.h>

void main()
{
    int temp,i,j;
    int arr[] = {50,13,53,14,65,98,65,87,65,12};
    for( i = 1 ; i < sizeof(arr)/sizeof(arr[0]); i = i + 2)
    {
        temp = arr[i];
        arr[i] = arr[i-1];
        arr[i-1] = temp;       
    }
    printf("{");
    for( j = 0 ; j < sizeof(arr)/sizeof(arr[0]) ; j++)
    {
        printf("%d,", arr[j]);
    }
    printf("}");
}

*/

//---------------------------------------------------------------------------------------------------

/*

//In this program process given data to find area of plot and list the largest plot by area

#include<stdio.h>
#include<math.h>
void main()
{
    int plot[] = {1,2,3,4,5,6};
    float a[] = {137.4 , 155.2 , 149 , 160.0 , 155.6 , 149.7};
    float b[] = {80.9 , 92.62 , 97.93 , 100.25 , 68.95 , 120.0};
    float angle[] = {0.78 , 0.89 , 1.35 , 9.00 , 1.25 , 1.75};
    int i,j;
    float max;
    float area[6];

    for ( i = 0 ; i < sizeof(plot)/sizeof(plot[0]) ; i++)
    {
        area[i] = 1.0/2 * a[i] * b[i] * (sin(angle[i]));
    }

    for ( j = 0 ; j < sizeof(plot)/sizeof(plot[0]) ; j++ )
    {
        max = area[0];
        if ( area[j] > max) 
        {
            max = area[j];
        }
        printf("%.2f\n", area[j]);
    }

    printf("\nMAXIMUM Area = %.2f\n", max);

}

*/

//--------------------------------------------------------------------------------------------------

/*
#include<stdio.h>

void main()
{
    int min,i,j;
    int arr[5][5] = 
                {
                    {413,52,614,134,751},
                    {5124,614,75,12,653},
                    {6413,614,78,12,73},
                    {908,123,644,765,876},
                    {15,361,751,2467,5125},
                };
    
min = arr[0][0];

    for ( i = 0 ; i < 5 ; i++)
    {
        for ( j = 0 ; j < 5 ; j++)
        {
            if (arr[i][j] < min) min = arr[i][j];
        }
    }
    printf("Minimum is = %d\n", min);
}

*/

//--------------------------------------------------------------------------------------------------

/*

#include<stdio.h>

void main()
{
    int i,j,k,l;
    int matrix1[5][3] = {
                            {12,45,87},
                            {51,64,72},
                            {13,47,52},
                            {61,74,98},
                            {62,26,32},
                        };
    
    int matrix2[3][5];
    int row_m1 = sizeof(matrix1) / sizeof(matrix1[0]); printf("number of rows = %d\n", row_m1);
    int column_m1 = sizeof(matrix1[0])/row_m1 + 1; printf("number of columns = %d\n", column_m1);
    
    for ( i = 0 ; i < row_m1 ; i++)
    {
        for ( j = 0 ; j < column_m1 ; j++)
        {
            printf("%d ", matrix1[i][j]);
            matrix2[j][i] = matrix1[i][j];
        }
        printf("\n");
    }

    printf("\n\n");

    for ( k = 0 ; k < 3 ; k++)
    {
        for ( l = 0 ; l < 5 ; l++)
        {
            printf("%d ", matrix2[k][l]);
        }
        printf("\n");
    }

}

*/

//-----------------------------------------------------------------------------------------------------

//The Following program was a challenge
//Initialize an array of user desired length and values, then find and print 
//the maximum value and its address from the initialized array.

/*
#include<stdio.h>
#include<time.h>

void wait()
{
    printf("----------Loading----------\n");
    sleep(1);
    printf("|||-------Loading----------\n");
    sleep(1);
    printf("||||||----Loading----------\n");
    sleep(3);
    printf("||||||||||Loading|||-------\n");
    sleep(1);
    printf("||||||||||Loading||||||||--\n");
    printf("||||||||||Loaded!||||||||||\n");
}

void main()
{
    printf("Welcome to Custom array initializer, Kindly wait for initializer to load\n");
    sleep(3);
    wait();

    int i, arrsize; //declaring essential variables

    printf("Enter maximum size of array : "); scanf("%d",&arrsize);
    puts("\n");

    int arr[arrsize]; //declaring array     

    for ( i = 1 ; i <= arrsize ; i++)
    {
        if ((i == 1 || i%10 == 1 || (i%100)%10 == 1) && i != 11) 
        {
            printf("Enter %dst element : ",i);
            scanf("%d", &arr[i-1]);
        }
        else if ((i == 2 || i%10 == 2 || (i%100)%10 == 2) && i != 12)
        {
            printf("Enter %dnd element : ",i);
            scanf("%d", &arr[i-1]);
        }
        else if (( i == 3 || i&10 == 3 || (i%100)%10 == 3) && i != 13)
        {
            printf("Enter %drd element : ",i);
            scanf("%d", &arr[i-1]);
        }
        else
        {
            printf("Enter %dth element : ",i);
            scanf("%d", &arr[i-1]);
        }
    }

    puts("Here is your initialized array\n");

    int max = arr[0],j;

    printf("{");
    for ( j = 0 ; j < arrsize ; j++)
    {
        if (arr[j] > max) max = arr[j];
        if (j == (arrsize - 1)) printf("%d",arr[j]);
        else printf("%d ", arr[j]);
    }
    printf("}\n\n");
    printf("Maximum value is %d and its address is %d\n\n\n", max, &max);

    sleep(3);
    printf("Thank you for using the program, the program only supports numerical suffix upto 999");
}

*/
